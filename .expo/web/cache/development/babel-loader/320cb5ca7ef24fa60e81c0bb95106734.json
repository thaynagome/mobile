{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/caiobastos/Documents/Faculdade-Impacta/Thayna/get-car-react/src/pages/UserRegistration/index.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { styles } from \"./styles\";\nimport Input from \"../../components/Input\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { addUser } from \"../../services/api\";\nimport { isEmailValid, validateField } from \"../../util/validation\";\nexport default function UserRegistration(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  function goHome() {\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Home'\n      }]\n    });\n  }\n\n  function onSubmit() {\n    var user = {\n      name: '',\n      age: 0,\n      address: '',\n      email: '',\n      userPassword: ''\n    };\n\n    if (!validateField(name, 'Informe seu nome')) {\n      return;\n    }\n\n    if (!validateField(age, 'Informe sua idade')) {\n      return;\n    }\n\n    if (!validateField(address, 'Informe seu endereço')) {\n      return;\n    }\n\n    if (!validateField(email, 'Informe seu e-mail')) {\n      return;\n    }\n\n    if (!isEmailValid(email)) {\n      Alert.alert('E-mail inválido', 'O endereço de e-mail informado está inválido.');\n      return;\n    }\n\n    if (!validateField(password, 'Escolha uma senha')) {\n      return;\n    }\n\n    user.name = name;\n\n    try {\n      user.age = parseInt(age);\n\n      if (isNaN(user.age)) {\n        Alert.alert('Idade inválida', 'Informe somente números no campo \"Idade\".');\n      }\n\n      if (user.age < 18) {\n        Alert.alert('Idade inválida', 'Informe uma \"idade\" maior ou igual a 18 anos.');\n        return;\n      }\n    } catch (error) {\n      Alert.alert('Idade inválida', 'Informe um valor numérico.');\n      return;\n    }\n\n    user.address = address;\n    user.email = email;\n    user.userPassword = password;\n    addUser(user).then(function (result) {\n      console.log('Resultado:');\n      console.log(result);\n\n      if (!result) {\n        Alert.alert('Erro ao Cadastrar', 'Houve um erro ao efetuar o cadastro.\\nContate o administrador.');\n        return;\n      }\n\n      Alert.alert('Cadastro Concluído', 'Cadastro concluído com êxito.');\n      goHome();\n    }).catch(function (error) {\n      console.error('UserRegistration.onSubmit');\n      console.error(error);\n      Alert.alert('Erro ao Cadastrar', 'Houve um erro ao efetuar o cadastro.\\nContate o administrador.');\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"Nome Completo\",\n    value: name,\n    onChange: setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Idade\",\n    value: age,\n    onChange: setAge,\n    keyboardType: \"number-pad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Endere\\xE7o\",\n    value: address,\n    onChange: setAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"E-mail\",\n    value: email,\n    onChange: setEmail,\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Senha\",\n    value: password,\n    onChange: setPassword,\n    isPassword: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.appButtonContainer,\n    onPress: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")), React.createElement(TouchableOpacity, {\n    style: styles.appButtonContainer,\n    onPress: goHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Cancelar\")));\n}","map":{"version":3,"sources":["/home/caiobastos/Documents/Faculdade-Impacta/Thayna/get-car-react/src/pages/UserRegistration/index.tsx"],"names":["React","useState","styles","Input","TouchableOpacity","addUser","isEmailValid","validateField","UserRegistration","navigation","name","setName","age","setAge","address","setAddress","email","setEmail","password","setPassword","goHome","reset","index","routes","onSubmit","user","userPassword","Alert","alert","parseInt","isNaN","error","then","result","console","log","catch","container","appButtonContainer","appButtonText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Alert } from 'react-native';\nimport { styles } from './styles';\nimport Input from '../../components/Input';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { addUser } from '../../services/api';\nimport User from '../../models/User';\nimport { isEmailValid, validateField } from '../../util/validation';\n\nexport default function UserRegistration({ navigation }: any) {\n    const [name, setName] = useState('');\n    const [age, setAge] = useState('');\n    const [address, setAddress] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function goHome(): void {\n        navigation.reset({\n            index: 0,\n            routes: [{ name: 'Home' }],\n        });\n    }\n\n    function onSubmit(): void {\n        let user: User = {\n            name: '',\n            age: 0,\n            address: '',\n            email: '',\n            userPassword: '',\n        };\n\n        if (!validateField(name, 'Informe seu nome')) {\n            return;\n        }\n        if (!validateField(age, 'Informe sua idade')) {\n            return;\n        }\n        if (!validateField(address, 'Informe seu endereço')) {\n            return;\n        }\n        if (!validateField(email, 'Informe seu e-mail')) {\n            return;\n        }\n        if (!isEmailValid(email)) {\n            Alert.alert(\n                'E-mail inválido',\n                'O endereço de e-mail informado está inválido.'\n            );\n            return;\n        }\n        if (!validateField(password, 'Escolha uma senha')) {\n            return;\n        }\n\n        user.name = name;\n\n        try {\n            user.age = parseInt(age);\n\n            if (isNaN(user.age)) {\n                Alert.alert(\n                    'Idade inválida',\n                    'Informe somente números no campo \"Idade\".'\n                );\n            }\n\n            if (user.age < 18) {\n                Alert.alert('Idade inválida', 'Informe uma \"idade\" maior ou igual a 18 anos.');\n                return;\n            }\n\n        } catch (error) {\n            Alert.alert('Idade inválida', 'Informe um valor numérico.');\n            return;\n        }\n        user.address = address;\n        user.email = email;\n        user.userPassword = password;\n\n        addUser(user)\n            .then((result) => {\n                console.log('Resultado:');\n                console.log(result);\n                if (!result) {\n                    Alert.alert(\n                        'Erro ao Cadastrar',\n                        'Houve um erro ao efetuar o cadastro.\\nContate o administrador.'\n                    );\n                    return;\n                }\n\n                Alert.alert(\n                    'Cadastro Concluído',\n                    'Cadastro concluído com êxito.'\n                );\n\n                goHome();\n            })\n            .catch((error) => {\n                console.error('UserRegistration.onSubmit');\n                console.error(error);\n                Alert.alert(\n                    'Erro ao Cadastrar',\n                    'Houve um erro ao efetuar o cadastro.\\nContate o administrador.'\n                );\n            });\n    }\n\n    return (\n        <View style={styles.container}>\n            <Input label=\"Nome Completo\" value={name} onChange={setName} />\n            <Input\n                label=\"Idade\"\n                value={age}\n                onChange={setAge}\n                keyboardType=\"number-pad\"\n            />\n            <Input label=\"Endereço\" value={address} onChange={setAddress} />\n            <Input\n                label=\"E-mail\"\n                value={email}\n                onChange={setEmail}\n                keyboardType=\"email-address\"\n            />\n            <Input\n                label=\"Senha\"\n                value={password}\n                onChange={setPassword}\n                isPassword\n            />\n\n            <TouchableOpacity\n                style={styles.appButtonContainer}\n                onPress={onSubmit}\n            >\n                <Text style={styles.appButtonText}>Cadastrar</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.appButtonContainer}\n                onPress={goHome}\n            >\n                <Text style={styles.appButtonText}>Cancelar</Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}